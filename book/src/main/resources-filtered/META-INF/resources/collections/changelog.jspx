<?xml version="1.0" encoding="UTF-8"?>
<!--
ao-collections - Collections and related utilities for Java.
Copyright (C) 2020, 2021, 2022, 2023, 2024, 2025  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of ao-collections.

ao-collections is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ao-collections is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with ao-collections.  If not, see <https://www.gnu.org/licenses/>.
-->
<jsp:root
  xmlns:ao="https://oss.aoapps.com/taglib/"
  xmlns:c="http://java.sun.com/jsp/jstl/core"
  xmlns:changelog="https://semanticcms.com/changelog/taglib/"
  xmlns:core="https://semanticcms.com/core/taglib/"
  xmlns:fn="http://java.sun.com/jsp/jstl/functions"
  xmlns:jsp="http://java.sun.com/JSP/Page"
  version="2.1"
>
  <jsp:directive.page language="java" pageEncoding="UTF-8" />
  <jsp:directive.page session="false" />
  <core:page
    title="@{documented.name} Changelog"
    shortTitle="Changelog"
    tocLevels="1"
    datePublished="2020-03-24T00:28:49-05:00"
    dateModified="2025-02-12T02:29:49Z"
  >
    <c:set var="latestRelease" value="3.0.0" />
    <c:if test="${
      fn:endsWith('@{project.version}', '-SNAPSHOT')
      and !fn:endsWith('@{project.version}', '-POST-SNAPSHOT')
      and '@{project.version}' != (latestRelease.concat('-SNAPSHOT'))
    }">
      <changelog:release
        projectName="@{documented.name}"
        version="@{project.version}"
        groupId="@{project.groupId}"
        artifactId="@{documented.artifactId}"
        repository="@{nexusUrl}content/repositories/snapshots/"
        scmUrl="@{project.scm.url}"
      >
        <ul>
          <li>Updated to <ao:a href="https://checkstyle.org/releasenotes.html#Release_10.21.1">Checkstyle 10.21.1</ao:a>.</li>
          <li>Minimum Java version changed from 1.8 to 11.</li>
        </ul>
      </changelog:release>
    </c:if>

    <changelog:release
      projectName="@{documented.name}"
      version="3.0.0"
      datePublished="2021-10-15T18:44:17-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          <strong>Breaking change:</strong> <code>AoCollections.filter(List, Class)</code> now returns
          <code>null</code> when <code>list == null</code>, instead of an empty list.  This is for
          consistency with other methods.
        </li>
        <li>
          <code>AoArrays</code>, <code>AoCollections</code>, and <code>Sets</code> now accept
          <code>null</code> parameters instead of throwing NPE, where it makes sense.  An example is
          unmodifiable wrappers: <code>null</code> is arguably already unmodifiable.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="2.0.0"
      datePublished="2021-07-04T00:10:53-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          <code>MinimalList.copy(List)</code> optimized to return <code>Collections.emptyList()</code>
          when the list is empty.  This was the intent all along, but was lost in some previous
          refactoring.  The method still worked correctly, in that it created a safe copy of the original
          list, but was sub-optimal.
        </li>
        <li>Now supports Java 9+ modules with included <code>module-info.class</code>.</li>
        <li>Maven artifact relocated from <code>com.aoindustries:ao-collections</code> to <code>com.aoapps:ao-collections</code>.</li>
        <li>Package renamed from <code>com.aoindustries.collections</code> to <code>com.aoapps.collections</code>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.2.0"
      datePublished="2020-11-17T16:00:58-06:00"
      groupId="com.aoindustries"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          New utility methods to create <code>HashSet</code> and <code>HashMap</code> to hold a given number
          of elements.  These are useful as lambda method references, where performing the typical computation
          inline would be unnecessarily verbose.
        </li>
        <li>
          <code>IdentityKey</code> now has a <code>NULL</code> constant, along with static factory methods
          to use this constant for <code>null</code> values.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.1.0"
      datePublished="2020-05-13T17:43:00-05:00"
      groupId="com.aoindustries"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          <p>
            Fixed <code><ao:a href="apidocs/com.aoapps.collections/com/aoapps/collections/SortedProperties.html">SortedProperties</ao:a></code>
            compatibility with Java 9+ by also sorting <code>entrySet()</code>.
          </p>
          <p>
            Also added <code>getKeyComparator()</code> method to support different sort orders.
          </p>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.0.0"
      datePublished="2020-03-25T02:37:10-05:00"
      groupId="com.aoindustries"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          Project split out of <core:link book="/lang" page="/index.jspx" />
          and <core:link book="/hodgepodge" page="/index.jspx" />.
        </li>
        <li>
          New utility class <code><ao:a href="apidocs/com.aoapps.collections/com/aoapps/collections/Sets.html">Sets</ao:a></code>
          for working with sets.  Prefer functionality in
          <ao:a href="https://commons.apache.org/proper/commons-collections/">Commons Collections</ao:a>
          or other more mainstream places.  These methods are things not so concisely
          doable in commons collections.
        </li>
      </ul>
    </changelog:release>
  </core:page>
</jsp:root>
